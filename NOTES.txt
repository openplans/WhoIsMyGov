OFFICES TA CARES ABOUT
======================

 * City Council (by council districts)

 * Controller (citywide)

 * Mayor (citywide)

 * Public Advocate (citywide)

 * Borough President (by borough)

 * DA (manhattan only for now; by borough)




DATA
======

 http://www.nyc.gov/html/dcp/html/bytes/dwndistricts.shtml

 District shapefiles:

 * DA?

 * City Council:
   http://www.nyc.gov/html/dcp/download/bytes/nycc_08cav.zip


CODE NOTES
=============



Plan
=====

* Use SRID = 4326 aka
  WGS84(http://en.wikipedia.org/wiki/World_Geodetic_System) 
  ... which seems to be what blockparty uses; stores things as lon/lat
  pairs so i can easily query for which district contains a lon/lat 

* This apparently works to find my home districts (LONGITUDE FIRST):

  select * from districts where districts.geometry is not NULL and st_contains(districts.geometry, ST_GeomFromText('POINT(-73.96805047988892 40.677578720206355 )', 4326));

* Refactor the models as per below.



NEW DATA MODEL
======================

 From a location, we look up one or more districts (they can overlap).
 But we realy need to factor out some data from the districts.
 For now:

Stupid Simple Version aka All I Have Time For
---------------------------------------------

Assume for now that all candidates are for the September 2009 NYC
Democratic primaries.

 * A District has 0..N People.

 * Person has these attributes:
   - fullname
   - arbitrary other key/vals  (this replaces districts_meta)

 Office, party affiliation, candidate/incumbent status, etc. can all
 be modeled by some conventions in the key/val pairs.


DEFERRED: Marginally more flexible version
------------------------------------------

 * A District has 0..N Races.

 * A Race has 0..N People.
    attributes:
   - election date
   - type ("primary" | "general")

 * Person has these attributes:
   - party  (problem: what if more than one? should probably normalize it out...)

   - candidate type ("challenger" | "incumbent" | null (not running))

   - arbitrary other key/vals


DEFERRED: Moderately complex version
------------------------------------

This would be pretty flexible... but at this point we really need to
think about trying to re-use more of Votesmart's data, particularly
their IDs, since they already deal with a lot of similar info.

 * A District has 0..N Offices.

 * An Office has 0 or 1 associated People, these are the incumbents.

 * An Office has 0..2 associated Races. (2 would mean primary, general)

 * A Race has 0..N associated People, these are the candidates.

 * Each Race has attributes:
   - election date
   - type ("primary" | "general")

 * Person has these attributes:
   - party  XXX what if more than one? should probably normalize it out...

   - candidate type ("challenger" | "incumbent" | null (not running))
     ... defer that, maybe YAGNI

   - arbitrary other key/vals
   




Votesmart usage examples:
-----------------------------

nyc_id = 898
nyc_officials = votesmart.local.getOfficials(nyc_id)
pprint([(c.lastName, c.title, c.officeParties) for c in nyc_officials])



TO DO 8/9/09:
-------------

* district.district_type is no good as office name, b/c some districts
  are used for multiple offices (eg. boroughs).  Write a migration to
  copy district_type to people_meta.office where district_type =
  'City Council'.
